exit
self.towers[to_tower].last < self.towers[from_tower].last
self.towers[to_tower].last 
self.towers[to_tower].last > self.towers[from_tower].last
s
c
s
towers
s
self.towers
moving_disc
s
moving_disc
s
!self.towers[to_tower].empty?
self.towers[to_tower].empty?
s
(self.towers[from_tower] == nil || self.towers[to_tower] == nil)
self.towers[from_tower].empty?
self.towers[from_tower]
self.towers
c
self.courses[1]
self.courses[0]
self.courses
s
self.courses
course
self
s
c
s
course.conflicts_with?(course_object)
course
course.conflict_with?(course_object)
self.courses[0].conflict_with?(course_object)
self.course.conflict_with?(course_object)
self.course, course_object
course_object
s
self.courses[0]
self.courses
s
@courses
s
@courses
s
c
s
self.courses[0].conflicts_with?(course_object)
self.courses[0]
course_object
self.courses
course
s
@courses
s
@courses
s
c
self.courses.empty?
self.courses
exit
self.courses
course_object
c
s
student
ruby
student.courses
s
c
f
s
n
self.courses
self
course_object
