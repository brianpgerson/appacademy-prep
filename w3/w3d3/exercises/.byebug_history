n
report
n
s
ship.length
ship.direction
start
s
n
ship.direction
start
s
c
exit
self.ships[0].report
self.ships[0]
self
s
n
self.human_player.ships.each { |ship| puts self.human_player.ships.report }
self.human_player.ships.each { |ship| puts human_player.ships.report }
self.human_player.ships.each { |ship| puts report }
self.human_player.ships
self.human_player
self
c
player.board.grid[y][start[0]]
s
player.board.grid[y][start[0]]
s
player.board.grid[y][start[0]]
check
s
check
n
check
n
check
s
ship
n
s
n
c
n
s
n
check
n
s
ship
s
n
s
n
check
n
s
ship
s
n
type
tye
n
check
n
s
ship
s
self
player
ship
n
s
n
c
direction
s
n
random_spot.split("").map { |e| e.to_i }
s
n
s
n
c
n
exit
random_spot
s
exit
c
player.board.own_board
player.ships[2]
player.ships[2
player.ships
player
c
s
player.board.grid[start[0]][x]
s
ship
s
c
check.any? { |e| e == nil || e == :SHIP }
check
c
check
c
n
check.any? { |e| e == nil || e == :SHIP }
check
c
check
s
exit
check
s
check
chick
s
check
s
c
player.board.grid[12]
player.board.grid[9][0]
player.board.grid[12][0]
start[0]
start[1] + length - 1
start[1] + length
start[1]
player.board.grid[start[1] + length - 1][start[0]]
s
c
exit
start
player.board.grid[8][8]
player.board.grid[8,8]
player.board.grid[start[0]][start[1] + length - 1]
player.board.grid[start[0]][start[1] + length - 1] == nil
s
c
s
player.board.grid[start[0]][start[1] + length - 1]
player.board.grid[start[0]][start[1] + length - 1] == nil
s
ship
exit
player.board.grid[19]
player.board.grid[9]
player.board.grid[11][11]
player.board.grid[start[11]][11]
player.board.grid[start[0]][11]
player.board.grid[start[0]][10]
player.board.grid[start[0]][0]
player.board.grid[start[0]][x]
s
player.board.grid[start[0]][x]
s
exit
c
direction
length
s
c
ship
direction
s
ship
n
ship
n
c
ship
s
player.ships.last
player.ships
n
c
player
n
s
c
ship.location
s
ship.length
length
s
ship.direction
ship
n
c
n
c
s
@human_player.ships
@human_player.turns_left
@human_player
self.human_player.ships
self.human_player
self
s
@direction
@location
s
location
s
c
exit
@current_player
c
@current_player
current_player
c
@current_player.board
c
@current_player.board
@current_player
current_player
board
game
self
c
exit
c
@turns_left
@turns_lef
c
board.grid
c
board.grid
n
coordinates
c
sc
s
n
s
c
n
pos
n
c
pos
c
coordinates
s
input.scan(/\d/).map { |e| e.to_i }
input
s
@human_player.get_play
@human_player
n
s
c
pos
c
